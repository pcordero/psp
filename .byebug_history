q
@subscription.valid?
@subscription.save
q
@subscription.save
q
@subscription.save
q
@subscription.save
q
params
q
ap mail_chimp_list
require 'awesome_print'
ap mail_chimp_list
quit
ap mail_chimp_list
mail_chimp_list
(mail_chimp_list.headers.methods - Object.methods).sort
(mail_chimp_list.methods - Object.methods).sort
(mail_chimp_list.body.methods - Object.methods).sort
mail_chimp_list.body
(mail_chimp_list.methods - Object.methods).sort
mail_chimp_list
c
segment.public_name
(segment.methods - Object.methods).sort
segment.id
segment
c
merge_vars[:state_code]
c
merge_vars
c
q
merge_vars
c
q
merge_vars
q
self.state_code
self.state_id
self.state
merge_vars
q
self.state_code
self
merge_vars
q
merge_vars
q
merge_vars
q
merge_vars
q
merge_vars
c
q
merge_vars
c
segment.to_s
segment
c
s
c
get(endpoint).parsed_response
endpoint
c
get(endpoint).parsed_response
c
endpoint
s
get_leaders "/v1/states/#{state_code}/leaders"
"/v1/states/#{state_code}/leaders"
